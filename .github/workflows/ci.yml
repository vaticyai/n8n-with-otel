name: N8N CI pipeline
run-name: Running pipeline for ${{ github.actor }}`s push
on:
  push:
    # Run on every commit to any branch
jobs:
  build-and-deploy:
    name: Build and Push Application Image
    if: github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: build-base-image
    outputs:
      image_digest: ${{ steps.get_digest.outputs.image_digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push application image
        id: build
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/n8n-otel:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/n8n-otel:${{ github.ref_name }},push=true
      
      - name: Get image digest
        id: get_digest
        run: |
          # Extract digest from build output metadata
          IMAGE_DIGEST="${{ steps.build.outputs.digest }}"
          
          # Fallback: if build output doesn't have digest, inspect the image
          if [ -z "$IMAGE_DIGEST" ]; then
            echo "Build output digest not found, inspecting image..."
            IMAGE_DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/n8n-otel:${{ github.ref_name }} | grep "Digest:" | head -1 | awk '{print $2}')
          fi
          
          echo "image_digest=$IMAGE_DIGEST" >> "$GITHUB_OUTPUT"
          echo "Using digest: '$IMAGE_DIGEST'"
